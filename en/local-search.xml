<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Introducing my Patreon-based sponsor service - The way for helping and encouraging me continue to develop open-source projects</title>
    <link href="/en/2022/12/24/Introducing-my-Patreon-based-sponsor-service-The-way-for-helping-and-encouraging-me-continue-to-develop-open-source-projects/"/>
    <url>/en/2022/12/24/Introducing-my-Patreon-based-sponsor-service-The-way-for-helping-and-encouraging-me-continue-to-develop-open-source-projects/</url>
    
    <content type="html"><![CDATA[<p>Since maintaining open-source projects only for love is not sustainable, I hopeto find a way to keep my passion for maintaining open-source projects. So, I amproud to introduce my Patreon-based sponsor service, I think it is a good way to achieve this goal.</p><p>Here is my Patreon page: <a href="https://www.patreon.com/MouriNaruto">https://www.patreon.com/MouriNaruto</a></p><p>There are three levels which can be chosen in my Patreon page.</p><h3 id="Faithful-Supporter-1-per-month"><a href="#Faithful-Supporter-1-per-month" class="headerlink" title="Faithful Supporter ($1 per month)"></a>Faithful Supporter ($1 per month)</h3><p>This option is suitable for people who want to support me only. I am happy I can have a good cup of coffee from you. You can send me a message and I wouldrespond! Thank you for doing this!</p><h3 id="Exclusive-Projects-Available-5-per-month"><a href="#Exclusive-Projects-Available-5-per-month" class="headerlink" title="Exclusive Projects Available ($5 per month)"></a>Exclusive Projects Available ($5 per month)</h3><p>I will provide several projects only available for sponsors to you. In thecurrent stage, I start to provide Shadow Maiden, it is a system optimization tool for Windows. This is my first project which follow the sponsorware model.The first release of Shadow Maiden, or 1.0 (Build 2) and it’s now available.</p><h3 id="Customized-Projects-Available-3000-per-month"><a href="#Customized-Projects-Available-3000-per-month" class="headerlink" title="Customized Projects Available ($3000 per month)"></a>Customized Projects Available ($3000 per month)</h3><p>Important Note: I know this level is really expensive, I set that because I am busy and I need to set a price which is higher than my monthly salary which canmake me help you without any worries. If you really want to choose this level,please contact me immediately via e-mail first before sponsoring.</p><p>I can customize and develop projects exclusive for you if you choose this. Ifyou are a company, sincerely I hope we can set up a long-term cooperation relationship in the future.</p><h2 id="Alternative-option-for-sponsoring-me"><a href="#Alternative-option-for-sponsoring-me" class="headerlink" title="Alternative option for sponsoring me"></a>Alternative option for sponsoring me</h2><p>Note: If you don’t want to use Patreon, I also provide the alternative optionbased on PayPal, maybe it’s a suitable way.</p><p>Here is my PayPal.me page: <a href="https://paypal.me/MouriNaruto">https://paypal.me/MouriNaruto</a></p><h2 id="Afterwards"><a href="#Afterwards" class="headerlink" title="Afterwards"></a>Afterwards</h2><p>I really hope I can find a sustainable way to keep my passion for maintainingopen-source projects. Thank you for reading.</p><p>Kenji Mouri</p>]]></content>
    
    
    <categories>
      
      <category>Announcement</category>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Announcement</tag>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Introducing Nana Series Projects</title>
    <link href="/en/2022/07/31/Introducing-Nana-Series-Projects/"/>
    <url>/en/2022/07/31/Introducing-Nana-Series-Projects/</url>
    
    <content type="html"><![CDATA[<p>Since the success of NanaZip and replace NSudo as my representative project. I think it’s time to create and rename some projects with the Nana prefix.</p><h2 id="The-reason-of-use-Nana-prefix"><a href="#The-reason-of-use-Nana-prefix" class="headerlink" title="The reason of use Nana prefix"></a>The reason of use Nana prefix</h2><ul><li>Conform to the convention that most of M2-Team projects created by myself start with the N letter.</li><li>Unify the product line from M2-Team created by myself.</li><li>There are some connections between Nana and my real name. Kenji Mouri is only my pseudonym and Japanese name.</li></ul><h2 id="The-list-of-Nana-Series-Projects"><a href="#The-list-of-Nana-Series-Projects" class="headerlink" title="The list of Nana Series Projects"></a>The list of Nana Series Projects</h2><p>P.S. Sort by project release date.</p><ul><li><a href="https://github.com/M2Team/NanaZip">NanaZip</a></li><li><a href="https://github.com/M2Team/NanaRun">NanaRun</a></li><li><a href="https://github.com/M2Team/NanaGet">NanaGet</a></li><li><a href="https://github.com/M2Team/NanaBox">NanaBox</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Announcement</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Announcement</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>The reasons I created NanaBox</title>
    <link href="/en/2022/07/31/The-reasons-I-created-NanaBox/"/>
    <url>/en/2022/07/31/The-reasons-I-created-NanaBox/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/M2Team/NanaBox">NanaBox</a> maybe the first open-source third-party lightweight XAML-basedout-of-box-experience oriented Hyper-V client based on Host Compute System API, Remote Desktop ActiveX controland XAML Islands.</p><p>But maybe you will ask me the reasons I created NanaBox, I will tell you in this article.</p><h2 id="Create-a-virtual-machine-software-for-personal-use"><a href="#Create-a-virtual-machine-software-for-personal-use" class="headerlink" title="Create a virtual machine software for personal use"></a>Create a virtual machine software for personal use</h2><p>Because the recent version of VMware Workstation has several issues which are not fixed after waiting at least half ayear. So, I think I should make a virtualization solution for myself, and it will be easier for me to do something I want because its implementation is controlled.</p><h2 id="Developing-projects-based-on-Hyper-V"><a href="#Developing-projects-based-on-Hyper-V" class="headerlink" title="Developing projects based on Hyper-V"></a>Developing projects based on Hyper-V</h2><p>Because Host Compute System API is only support Hyper-V Gen 2 Virtual Machine which is a typical UEFI Class 3 platform.I can use it for designing, developing. debugging and test some UEFI applications.</p><p>Also, Hyper-V is a typical paravirtualization solution which can use in large scale production environments. So I candiscover some ultra-lightweight solutions which can utilize the paravirtualization.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ensure software MIDI support existance for Windows</title>
    <link href="/en/2022/06/30/Ensure-software-MIDI-support-existance-for-Windows/"/>
    <url>/en/2022/06/30/Ensure-software-MIDI-support-existance-for-Windows/</url>
    
    <content type="html"><![CDATA[<p>When I am using Hyper-V Gen2 VM, I found I can’t play MIDI.</p><p>I did some investigation and found the solution.</p><p>Windows 10 Version 1903 and later have fixed that issue. So, it’s not necessary to use this.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Save the following content to a <code>.reg</code> file and double click it to import.</p><figure class="highlight abnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><pre><code class="hljs abnf">Windows Registry Editor Version <span class="hljs-number">5.00</span><br><br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Drivers32]<br><span class="hljs-string">&quot;aux&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><span class="hljs-string">&quot;midi&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><span class="hljs-string">&quot;mixer&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><span class="hljs-string">&quot;wave&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><br>[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows NT\CurrentVersion\Drivers32]<br><span class="hljs-string">&quot;aux&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><span class="hljs-string">&quot;midi&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><span class="hljs-string">&quot;mixer&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><span class="hljs-string">&quot;wave&quot;</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;wdmaud.drv&quot;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My opinion about someone boycotting 7-Zip</title>
    <link href="/en/2022/06/30/My-opinion-about-someone-boycotting-7-Zip/"/>
    <url>/en/2022/06/30/My-opinion-about-someone-boycotting-7-Zip/</url>
    
    <content type="html"><![CDATA[<p>In recent days, I have known someone wants to boycotting 7-Zip. Most of people including me think that their reasonsare nonsense. I write the comment in <a href="https://www.theregister.com/AMP/2022/06/27/7zip_compression_tool">https://www.theregister.com/AMP/2022/06/27/7zip_compression_tool</a> and make the backup in this article because I think it’s necessary for me to show my position.</p><h2 id="The-full-text-of-my-comment"><a href="#The-full-text-of-my-comment" class="headerlink" title="The full text of my comment"></a>The full text of my comment</h2><p>Hi, NanaZip author here.</p><p>Actually, I am a faithful 7-Zip user since 2011 when I got the 7-Zip 9.20 installer binary, until I created NanaZip inlate 2021. (But I am still a 7-Zip user in strictly.) It’s a professional tool for many people. I often use it to pre-analyze the structure of executable file.</p><p>I can prove the source code of 7-Zip mainline is easy to build and 100% clean with code-level modularize.</p><p>When I read the source code of 7-Zip, I feel I am talking with an old school software developer, with the similar feeling with my senior. They both intend for smaller binaries. So, I can understand why the author doesn’t like “/GS”,“/DYNAMICBASE” and the compiler flags which can make binary expansion. Also, they both care about old Windows compatibility. So, I can understand why the author don’t do some modernization work.</p><p>Based on these, I created NanaZip because I want to integrate some modern things which not acceptable by 7-Zip author.(As same as my senior, he doesn’t like App Model and Windows Runtime. But I want to use App Model and Windows RuntimeXAML to modernize the user experience.)</p><p>Kenji Mouri</p><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>I have selected and made some patches to 7-Zip mainline from NanaZip. I hope the author can be merge it because it don’t need to break the old Windows compatibility.</p><p>For more information, please read <a href="https://sourceforge.net/p/sevenzip/discussion/45797/thread/68fd36919f/">https://sourceforge.net/p/sevenzip/discussion/45797/thread/68fd36919f/</a>.</p>]]></content>
    
    
    <categories>
      
      <category>Opinions</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Opinions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Introducing NanaGet - Lightweight file transfer utility based on aria2 and XAML Islands</title>
    <link href="/en/2022/05/31/Introducing-NanaGet-Lightweight-file-transfer-utility-based-on-aria2-and-XAML-Islands/"/>
    <url>/en/2022/05/31/Introducing-NanaGet-Lightweight-file-transfer-utility-based-on-aria2-and-XAML-Islands/</url>
    
    <content type="html"><![CDATA[<p>In recent days, I have created a new project called <a href="https://github.com/M2Team/NanaGet">NanaGet</a>, the successor of <a href="https://github.com/M2TeamArchived/Nagisa">Nagisa</a>, a lightweight file transfer utility based on aria2 and XAML Islands.</p><h2 id="Development-History"><a href="#Development-History" class="headerlink" title="Development History"></a>Development History</h2><p>In 2017, I had created a project called Nagisa, a file transfer utility designed for Universal Windows Platform. It ismainly developed in C++ 17, with WinRT API, Win32 API, WRL, STL, C++/CX and C++/WinRT for better efficiency and consumesless storage space. I had made an ambitious plan, and here is the development roadmap:</p><ul><li>Assassin Transfer Engine (An alternative to Windows.Networking.BackgroundTransfer)<ul><li>Support background download. </li><li>Support resuming broken/dead downloads.</li><li>Support multi-thread multi-task download. </li><li>Support HTTP 1.1 and HTTP/2 protocol for HTTP and HTTPS support.</li><li>Support FTP, FTPS and SFTP.</li><li>Support WebSocket and WebSocket Secure.</li><li>Support BitTorrent, Magnet and ED2K.</li><li>Support downloading files from multiple URIs.</li></ul></li><li>Experience<ul><li>Support providing HASH value for downloaded files.</li><li>Support get download URI from QR code and texts in images.</li><li>Support establishing download daemons on IoT devices (like Raspberry Pi). </li><li>Support pushing a download task to the other devices.</li></ul></li></ul><p>But finally Nagisa had been abandoned because I had met a lot of challenges for implementing a file transfer engine with socket broker background tasks in Universal Windows Platform. But Nagisa is still meaningful because I won’t create a merged PR for OpenSSL to adding Universal Windows Platform targeting support without implementing Nagisa.</p><p>P.S. Here is my merged PR for OpenSSL: <a href="https://github.com/openssl/openssl/pull/8917">https://github.com/openssl/openssl/pull/8917</a>.</p><p>Several years later, around late 2021, I want to create a remake version of Nagisa. Because I found my current filetransfer tool, Free Download Manager, which does not support 125% DPI scaling properly. Also I want to validate my XAML Islands toolchain, Mile.Xaml, which will be used for the development of NanaZip 2.x. I have changed my mind after taking lessons for developing Nagisa. Here is my changes:</p><ul><li>Switch to XAML Islands because it’s more flexible for developing a file transfer tool.</li><li>Use Aria2 for transfer engine instead of developing homemade transfer engine.</li></ul><p>Because Microsoft unpublished Nagisa from Microsoft Store for software quality reasons and I also want to unify theproduct line from M2-Team. (There are some connections between Nana and my real name. Kenji Mouri is only my pseudonymand Japanese name.) So, the remake version of Nagisa has a new name called NanaGet.</p><p>The development progress is really smooth.</p><h2 id="Solved-Challenges"><a href="#Solved-Challenges" class="headerlink" title="Solved Challenges"></a>Solved Challenges</h2><p>Because I have selected aria2 as the transfer engine and JSON-RPC as the communication way. For solving the conflict issues for the TCP port used for aria2 JSON-RPC. I had made an implementation for getting an unused TCP port and hopeit can make some help for readers.</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;Windows.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;WinSock2.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;WS2tcpip.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iphlpapi.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> comment(lib, <span class="hljs-string">&quot;ws2_32.lib&quot;</span>)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdint&gt;</span></span><br><br><span class="hljs-function">std::<span class="hljs-type">uint16_t</span> <span class="hljs-title">PickUnusedTcpPort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    std::<span class="hljs-type">uint16_t</span> Result = <span class="hljs-number">0</span>;<br><br>    WSADATA WSAData;<br>    <span class="hljs-type">int</span> Status = ::<span class="hljs-built_in">WSAStartup</span>(<br>        <span class="hljs-built_in">MAKEWORD</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>),<br>        &amp;WSAData);<br>    <span class="hljs-keyword">if</span> (ERROR_SUCCESS == Status)<br>    &#123;<br>        SOCKET ListenSocket = ::<span class="hljs-built_in">socket</span>(<br>            AF_INET,<br>            SOCK_STREAM,<br>            IPPROTO_TCP);<br>        <span class="hljs-keyword">if</span> (INVALID_SOCKET != ListenSocket)<br>        &#123;<br>            sockaddr_in Service;<br>            Service.sin_family = AF_INET;<br>            Service.sin_addr.s_addr = INADDR_ANY;<br>            Service.sin_port = ::<span class="hljs-built_in">htons</span>(<span class="hljs-number">0</span>);<br>            Status = ::<span class="hljs-built_in">bind</span>(<br>                ListenSocket,<br>                <span class="hljs-built_in">reinterpret_cast</span>&lt;LPSOCKADDR&gt;(&amp;Service),<br>                <span class="hljs-built_in">sizeof</span>(Service));<br>            <span class="hljs-keyword">if</span> (ERROR_SUCCESS == Status)<br>            &#123;<br>                <span class="hljs-type">int</span> NameLength = <span class="hljs-built_in">sizeof</span>(Service);<br>                Status = ::<span class="hljs-built_in">getsockname</span>(<br>                    ListenSocket,<br>                    <span class="hljs-built_in">reinterpret_cast</span>&lt;LPSOCKADDR&gt;(&amp;Service),<br>                    &amp;NameLength);<br>                <span class="hljs-keyword">if</span> (ERROR_SUCCESS == Status)<br>                &#123;<br>                    Result = ::<span class="hljs-built_in">ntohs</span>(Service.sin_port);<br>                &#125;<br>            &#125;<br>            ::<span class="hljs-built_in">closesocket</span>(ListenSocket);<br>        &#125;<br><br>        ::<span class="hljs-built_in">WSACleanup</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> Result;<br>&#125;<br></code></pre></td></tr></table></figure><p>Because I have selected XAML Islands for implementing the UI. I have also met some issues. I will write a new articlefor talking about that if I really solved them.</p><h2 id="Future-Plans"><a href="#Future-Plans" class="headerlink" title="Future Plans"></a>Future Plans</h2><ul><li>Improve the Mile.Xaml implementations for providing more modern control styles and keeping smaller binary size.</li><li>Continue to fixing bugs and adding features for NanaGet itself.</li><li>Try to build my aria2 binary instead of using offical one for providing x64 and arm64 native support for aria2 part.</li><li>Try to make my homemade transfer engine for do some researches.</li></ul><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>I hope you will enjoy it. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Announcement</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Announcement</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Introducing Mile.Milk - Some customized configurations for Linux Kernel</title>
    <link href="/en/2022/03/30/Introducing-Mile-Milk-Some-customized-configurations-for-Linux-Kernel/"/>
    <url>/en/2022/03/30/Introducing-Mile-Milk-Some-customized-configurations-for-Linux-Kernel/</url>
    
    <content type="html"><![CDATA[<p>In recent days, I have created a new project called <a href="https://github.com/ProjectMile/Mile.Milk">Mile.Milk</a>, provides some customized configurations for Linux Kernel, used in projects which were created by Kenji Mouri.</p><p>Note: Milk is the abbreviation of Mouri Internal Linux Kernel.</p><h2 id="Why-create-it"><a href="#Why-create-it" class="headerlink" title="Why create it"></a>Why create it</h2><p>I want to create a cloud-friendly and lightweight Linux distro for microservices base on .NET.</p><p>So, I need a customized Linux Kernel to achieve the goal.</p><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>Copy the configuration file you want to the root directory of Linux Kernel source code, and rename to <code>.config</code>.</p><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>I hope you will enjoy it. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Linux</category>
      
      <category>Linux Kernel</category>
      
      <category>.NET</category>
      
      <category>Development</category>
      
      <category>Announcement</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Announcement</tag>
      
      <tag>Development</tag>
      
      <tag>Linux</tag>
      
      <tag>Linux Kernel</tag>
      
      <tag>.NET</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Programming steps for launching an app with TrustedInstaller access token</title>
    <link href="/en/2022/03/28/Programming-steps-for-launching-an-app-with-TrustedInstaller-access-token/"/>
    <url>/en/2022/03/28/Programming-steps-for-launching-an-app-with-TrustedInstaller-access-token/</url>
    
    <content type="html"><![CDATA[<p>Hi, I’m Kenji Mouri, the creator of <a href="https://github.com/M2Team/NSudo">NSudo</a>, it’s one of the popular ways used forlaunching an app with TrustedInstaller access token.</p><p>I wonder to share you programming steps that how to launch an app with TrustedInstaller access token.</p><ol start="0"><li>Make sure your app which using to launch an app with TrustedInstaller access token is running as Administrator.</li><li>Enable the SeDebugPrivilege for the access token of the current process context.</li><li>Open and duplicate the access token of current session winlogon.exe process or session 0 smss.exe process.</li><li>Enable all privileges in the duplicated access token which was acquired from step 2, then impersonate with it.</li><li>Start TrustedInstaller service, open and duplicate the access token.</li><li>Set the session id to the current session id for the access token which was acquired from step 4.</li><li>Create process you want with the access token which was proceed with step 5.</li></ol><p>I hope the article can give some help for Windows desktop app developers. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Announcing I have been a Microsoft MVP</title>
    <link href="/en/2022/02/16/Announcing-I-have-been-a-Microsoft-MVP/"/>
    <url>/en/2022/02/16/Announcing-I-have-been-a-Microsoft-MVP/</url>
    
    <content type="html"><![CDATA[<p>I am proud to announce that I have been successfully elected to be the Microsoft MVP for Windows Development in February 2022, with two images to prove it.</p><p><img src="Certificate.png" alt="Certificate"></p><p><img src="Awardbox.png" alt="Crystal Trophy"></p><p>P.S. The crystal trophy is pretty cool.</p>]]></content>
    
    
    <categories>
      
      <category>Announcement</category>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Announcement</tag>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Introducing Mile.FFmpeg - The merged FFmpeg dynamic linked library for the Windows</title>
    <link href="/en/2022/01/26/Introducing-Mile-FFmpeg-The-merged-FFmpeg-dynamic-linked-library-for-the-Windows/"/>
    <url>/en/2022/01/26/Introducing-Mile-FFmpeg-The-merged-FFmpeg-dynamic-linked-library-for-the-Windows/</url>
    
    <content type="html"><![CDATA[<p>In recent days, I have created a new project called <a href="https://github.com/ProjectMile/Mile.FFmpeg">Mile.FFmpeg</a>, the successor of <a href="https://github.com/M2Team/FFmpegUniversal">FFmpegUniversal</a>, provides the merged FFmpeg dynamic linkedlibrary for the Windows.</p><p>I think you will ask me some questions when you read that. Here is the answers of the possible questions.</p><p>Read <a href="https://mouri.moe/zh/2022/01/26/Introducing-Mile-FFmpeg-The-merged-FFmpeg-dynamic-linked-library-for-the-Windows/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><h2 id="The-benefit-of-having-a-merged-dynamic-library"><a href="#The-benefit-of-having-a-merged-dynamic-library" class="headerlink" title="The benefit of having a merged dynamic library"></a>The benefit of having a merged dynamic library</h2><ul><li>The merged dynamic library can reduce at least 2MB binary size. If we enable some third-party modules and merge them,we can reduce more space.</li><li>The merged dynamic library can keep the output binary file tree tidy, I will try to use FFmpegInteropX in my desktop application with MediaPlayerElement control via XAML Islands and Media Foundation directly. My app will support portable mode. Based on that, I will try to rewrite FFmpegInteropX with C++/WinRT because I can use some open source infrastructures make the binary only rely on ucrtbase.dll. I will try to provide my rewrite implementation to this project because I love creating or contributing to open source projects.</li></ul><h2 id="Why-reimplement-the-FFmpegUniversal"><a href="#Why-reimplement-the-FFmpegUniversal" class="headerlink" title="Why reimplement the FFmpegUniversal"></a>Why reimplement the FFmpegUniversal</h2><p>The reason for doing a new implementation because I want to make my solution support Windows desktop application, and simplify the build process. I try to find a way to get all symbols from *.lib and generate dll export definition without useless export symbols instead of build dynamic version first only for getting the dll export definition.</p><p>Also I switch to vcpkg for simplify the project, provide NuGet package and support Windows Vista RTM or later.</p><h2 id="Features-of-Mile-FFmpeg"><a href="#Features-of-Mile-FFmpeg" class="headerlink" title="Features of Mile.FFmpeg"></a>Features of Mile.FFmpeg</h2><ul><li>Based on the latest FFmpeg source code tree from vcpkg.</li><li>Compile FFmpeg and related third-party libraries via vcpkg with aom, avcodec, avdevice, avfilter, avformat, bzip2,dav1d, fontconfig, freetype, iconv, ilbc, lzma, modplug, mp3lame, openh264, openjpeg, opus, snappy, soxr, speex, srt,swresample, swscale, theora, vorbis, vpx, webp, xml2 and zlib enabled.</li><li>Use VC-LTL 5.x toolchain to make the binary size smaller.</li><li>Provide NuGet package.</li></ul><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>You only need to search and add Mile.FFmpeg package in your NuGet client or download packages in GitHub Releases if youdon’t want to use NuGet package manager.</p><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>I hope you will enjoy it. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Announcement</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Announcement</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Modernize Win32 Message Box with Task Dialog</title>
    <link href="/en/2021/12/31/Modernize-Win32-Message-Box-with-Task-Dialog/"/>
    <url>/en/2021/12/31/Modernize-Win32-Message-Box-with-Task-Dialog/</url>
    
    <content type="html"><![CDATA[<p>When I was developing <a href="https://github.com/M2Team/NanaZip">NanaZip</a>, I plan to modernize the implementation of SelfExtracting Executables. Because Self Extracting Executables need to support older version of Windows, I plan to use <a href="https://docs.microsoft.com/en-us/windows/win32/controls/task-dialogs?WT.mc_id=WDIT-MVP-5004706">Task Dialog</a> to achieve the goal.</p><p>But I also think that I can use the same way from <a href="https://github.com/Chuyu-Team/YY-Thunks">YY-Thunks</a>, to make a wrapper for modernizing Win32 Message Box with Task Dialog for the existing Win32 apps without huge source codemodification.</p><p>YY-Thunks uses the MSVC specific features to hack the specified IAT item of the target binary for redirecting to the needed fallback implementation. I think it’s an elegant way to modernize the existing projects.</p><p>I just made a simple implementation and provide in this article and hope it can be some help for developers.</p><h2 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CommCtrl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> comment(lib,<span class="hljs-string">&quot;comctl32.lib&quot;</span>)</span><br><br><span class="hljs-function">EXTERN_C <span class="hljs-type">int</span> WINAPI <span class="hljs-title">ModernMessageBoxW</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">    _In_opt_ HWND hWnd,</span></span><br><span class="hljs-params"><span class="hljs-function">    _In_opt_ LPCWSTR lpText,</span></span><br><span class="hljs-params"><span class="hljs-function">    _In_opt_ LPCWSTR lpCaption,</span></span><br><span class="hljs-params"><span class="hljs-function">    _In_ UINT uType)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (uType != (uType &amp; (MB_ICONMASK | MB_TYPEMASK)))<br>    &#123;<br>        <span class="hljs-keyword">return</span> ::<span class="hljs-built_in">MessageBoxW</span>(hWnd, lpText, lpCaption, uType);<br>    &#125;<br><br>    TASKDIALOGCONFIG TaskDialogConfig = &#123; <span class="hljs-number">0</span> &#125;;<br><br>    TaskDialogConfig.cbSize = <span class="hljs-built_in">sizeof</span>(TASKDIALOGCONFIG);<br>    TaskDialogConfig.hwndParent = hWnd;<br>    TaskDialogConfig.dwFlags = TDF_ALLOW_DIALOG_CANCELLATION;<br>    TaskDialogConfig.pszWindowTitle = lpCaption;<br>    TaskDialogConfig.pszMainInstruction = lpText;<br><br>    <span class="hljs-keyword">switch</span> (uType &amp; MB_TYPEMASK)<br>    &#123;<br>    <span class="hljs-keyword">case</span> MB_OK:<br>        TaskDialogConfig.dwCommonButtons =<br>            TDCBF_OK_BUTTON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_OKCANCEL:<br>        TaskDialogConfig.dwCommonButtons =<br>            TDCBF_OK_BUTTON | TDCBF_CANCEL_BUTTON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_YESNOCANCEL:<br>        TaskDialogConfig.dwCommonButtons =<br>            TDCBF_YES_BUTTON | TDCBF_NO_BUTTON | TDCBF_CANCEL_BUTTON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_YESNO:<br>        TaskDialogConfig.dwCommonButtons =<br>            TDCBF_YES_BUTTON | TDCBF_NO_BUTTON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_RETRYCANCEL:<br>        TaskDialogConfig.dwCommonButtons =<br>            TDCBF_RETRY_BUTTON | TDCBF_CANCEL_BUTTON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        <span class="hljs-keyword">return</span> ::<span class="hljs-built_in">MessageBoxW</span>(hWnd, lpText, lpCaption, uType);<br>    &#125;<br><br>    <span class="hljs-keyword">switch</span> (uType &amp; MB_ICONMASK)<br>    &#123;<br>    <span class="hljs-keyword">case</span> MB_ICONHAND:<br>        TaskDialogConfig.pszMainIcon = TD_ERROR_ICON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_ICONQUESTION:<br>        TaskDialogConfig.dwFlags |= TDF_USE_HICON_MAIN;<br>        TaskDialogConfig.hMainIcon = ::<span class="hljs-built_in">LoadIconW</span>(<span class="hljs-literal">nullptr</span>, IDI_QUESTION);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_ICONEXCLAMATION:<br>        TaskDialogConfig.pszMainIcon = TD_WARNING_ICON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> MB_ICONASTERISK:<br>        TaskDialogConfig.pszMainIcon = TD_INFORMATION_ICON;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br><br>    <span class="hljs-type">int</span> ButtonID = <span class="hljs-number">0</span>;<br><br>    HRESULT hr = ::<span class="hljs-built_in">TaskDialogIndirect</span>(<br>        &amp;TaskDialogConfig,<br>        &amp;ButtonID,<br>        <span class="hljs-literal">nullptr</span>,<br>        <span class="hljs-literal">nullptr</span>);<br><br>    <span class="hljs-keyword">if</span> (ButtonID == <span class="hljs-number">0</span>)<br>    &#123;<br>        ::<span class="hljs-built_in">SetLastError</span>(hr);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> ButtonID;<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">if</span> defined(_M_IX86)</span><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> <span class="hljs-keyword">warning</span>(suppress:4483)</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(selectany) <span class="hljs-type">void</span> <span class="hljs-type">const</span>* <span class="hljs-type">const</span> __identifier(<span class="hljs-string">&quot;_imp__MessageBoxW@16&quot;</span>) = <span class="hljs-built_in">reinterpret_cast</span>&lt;<span class="hljs-type">void</span> <span class="hljs-type">const</span>*&gt;(::ModernMessageBoxW);<br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(selectany) <span class="hljs-type">void</span> <span class="hljs-type">const</span>* <span class="hljs-type">const</span> __imp_MessageBoxW = <span class="hljs-built_in">reinterpret_cast</span>&lt;<span class="hljs-type">void</span> <span class="hljs-type">const</span>*&gt;(::ModernMessageBoxW);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>The way to submit a headless app to the Microsoft Store</title>
    <link href="/en/2021/12/27/The-way-to-submit-a-headless-app-to-the-Microsoft-Store/"/>
    <url>/en/2021/12/27/The-way-to-submit-a-headless-app-to-the-Microsoft-Store/</url>
    
    <content type="html"><![CDATA[<p>When I was developing <a href="https://github.com/M2Team/NanaZip">NanaZip</a>, I had met the error when I upload my MSIX packageto the Microsoft Store. Here is the error message.</p><blockquote><p>Package acceptance validation error: The package file NanaZipPackage_1.0.18.0_ARM64.msix specifies a headless app.  You don’t have permission to create a headless app. Please update AppListEntry=”none” in the AppxManifest file and   also ensure you have the waiver “HeadlessAppBypass” associated to this app. </p></blockquote><p>Set <code>AppListEntry=&quot;none&quot;</code> for the entries of command line version of NanaZip is necessary because it’s not a good userexperience when showing the entries of command line version of NanaZip to the Start menu. So, this is why the command line version wasn’t included in NanaZip 1.0 Preview 1.</p><p>A good guy called <a href="https://github.com/be5invis">be5invis</a> has created the issue for suggesting NanaZip should expose execution alias of command line version. I told him why I wasn’t able to do that and he gave me a solution. So, The command line version of NanaZip has been finally added in 1.0 Preview 2.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>To request the HeadlessAppBypass waiver, send an email to <code>storeops@microsoft.com</code> with the app ID (12 character tokenavailable from the dashboard). The waiver needs to be applied <em>before</em> uploading the package (as of December 2021).</p><p>When the progress is successful, you will receive the reply with the following words.</p><blockquote><p>Thank you for contacting us. We have enabled the HeadlessAppBypass waiver for the requested product.</p></blockquote><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>You can read the original solution <a href="https://github.com/M2Team/NanaZip/issues/4#issuecomment-929720303">here</a>. It’s <a href="https://github.com/python/cpython/blob/main/PC/store_info.txt">originally</a> used in the Microsoft Store version of Python. I have do some revisions for accelerating the progress.</p><p>I hope the article can give some help for Windows desktop app developers. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Set Windows Application Packaging project with multiple referenced projects to a common output folder</title>
    <link href="/en/2021/12/26/Set-Windows-Application-Packaging-project-with-multiple-referenced-projects-to-a-common-output-folder/"/>
    <url>/en/2021/12/26/Set-Windows-Application-Packaging-project-with-multiple-referenced-projects-to-a-common-output-folder/</url>
    
    <content type="html"><![CDATA[<p>When I was developing <a href="https://github.com/M2Team/NanaZip">NanaZip</a>, I found if my Windows Application Packaging projectwith multiple referenced projects, it will output to the separate folder with the names of the referenced projects. </p><p>It’s really annoying me, and I had try to find a solution.</p><p>First, I found <a href="https://stackoverflow.com/questions/62853610">the same issue I have in Stack Overflow</a>, and I tried to use the way in the answer for solving the issue, but it doesn’t work if we want to reference some Windows Runtime components.</p><p>But I know the Windows Terminal is the project with multiple referenced projects and it will output to a common folder.So, I had taken a good look at the source code of Windows Terminal and found the way to solve the issue. </p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>Add the following to the end of the <code>Project</code> node to resolve the issue.</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- ## BEGIN HACK - Put all output files to the AppX root folder ## --&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  Reference: https://github.com/microsoft/terminal</span><br><span class="hljs-comment">             /blob/a89c3e2f8527a51b39768980627ed8f7c1ea5f0b</span><br><span class="hljs-comment">             /src/cascadia/CascadiaPackage/CascadiaPackage.wapproj#L73</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">  For our builds, we want to put all output files to the AppX root folder for</span><br><span class="hljs-comment">  simplifying the implementation.</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Target</span> <span class="hljs-attr">Name</span>=<span class="hljs-string">&quot;MileProjectStompSourceProjectForWapProject&quot;</span> <span class="hljs-attr">BeforeTargets</span>=<span class="hljs-string">&quot;_ConvertItems&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ItemGroup</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">      Stomp all &quot;SourceProject&quot; values for all incoming dependencies to </span><br><span class="hljs-comment">      flatten the package. </span><br><span class="hljs-comment">    --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">_TemporaryFilteredWapProjOutput</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;@(_FilteredNonWapProjProjectOutput)&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">_FilteredNonWapProjProjectOutput</span> <span class="hljs-attr">Remove</span>=<span class="hljs-string">&quot;@(_TemporaryFilteredWapProjOutput)&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">_FilteredNonWapProjProjectOutput</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;@(_TemporaryFilteredWapProjOutput)&quot;</span>&gt;</span><br>      <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">      Blank the SourceProject here to vend all files into the root of the</span><br><span class="hljs-comment">      package.</span><br><span class="hljs-comment">    --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">SourceProject</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">SourceProject</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">_FilteredNonWapProjProjectOutput</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ItemGroup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Target</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ## END HACK - Put all output files to the AppX root folder ## --&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>It’s a really disgusting issue for developers. But the Microsoft won’t fix that. The discussion can be found <a href="https://developercommunity.visualstudio.com/t/1110232">here</a>.</p><blockquote><p>As you can imagine there is a reason that we do this and the primary concern is duplicate filenames as well as some  issues with uploading to the store. As of now there is no override that we provide that will allow you to achieve   this although there are some hacks you could do to make it possible but it is not advised.​ (By Scoban [MSFT])</p></blockquote><p>The development team of Windows Terminal has made some hacking to MSBuild Windows Application Packaging project targetsfor achieving the goal. I am proud I can find it and solve the issue when I am developing NanaZip.</p><p>I hope the article can give some help for Windows desktop app developers. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Share my experience of implementing context menu support for File Explorer in Windows 11</title>
    <link href="/en/2021/12/25/Share-my-experience-of-implementing-context-menu-support-for-File-Explorer-in-Windows-11/"/>
    <url>/en/2021/12/25/Share-my-experience-of-implementing-context-menu-support-for-File-Explorer-in-Windows-11/</url>
    
    <content type="html"><![CDATA[<p>Hi, I’m Kenji Mouri, the creator of <a href="https://github.com/M2Team/NanaZip">NanaZip</a>, it may be the first third-partyopen-source file archiver which implements context menu support for File Explorer in Windows 11. I want to share my experience in this article because many friends ask me for learning how to implement that since I have released NanaZip1.0 Preview 1.</p><p>Many users and developers may notice that the context menus from their favourite apps won’t show in the context menu inWindows 11, which is implemented with XAML Islands. They need to click “Show more options” in the new context menu for accessing the context menu item they want to use via the legacy context menu.</p><p>I noticed it when Microsoft released the first insider preview of Windows 11 in late June, and I had waited for two months and found no third-party file archiver which implements context menu support for File Explorer in Windows 11. Ithought I need to create a file archiver to improve my user experience when I use Windows 11 in my main rig after October 5, 2021, because as a professional Windows desktop app developer, I need to pay attention to the latest Windowsplatform. Because I am a 7-Zip enthusiast, so I forked the source code tree of 7-Zip.</p><h2 id="The-requirements-for-implementing-context-menu-support-for-File-Explorer-in-Windows-11"><a href="#The-requirements-for-implementing-context-menu-support-for-File-Explorer-in-Windows-11" class="headerlink" title="The requirements for implementing context menu support for File Explorer in Windows 11"></a>The requirements for implementing context menu support for File Explorer in Windows 11</h2><p>According to <a href="https://blogs.windows.com/blog/2021/07/19/extending-the-context-menu-and-share-dialog-in-windows-11/">the article posted in Windows Blog</a>,we know that we need to use IExplorerCommand to implement the context menu and make it run under the app identity.</p><p>There are two ways for getting app identity, packaging the full app into the MSIX package or use Sparse Manifests if you want to make your app unpackaged. So, the AppX manifest is required.</p><h2 id="Implement-the-IExplorerCommand-interface"><a href="#Implement-the-IExplorerCommand-interface" class="headerlink" title="Implement the IExplorerCommand interface"></a>Implement the IExplorerCommand interface</h2><p>I think implement a simple context menu with the IExplorerCommand interface is easy, but due to the limitations of the IExplorerCommand interface, we can’t implement something like preview images in the context menu.</p><p>Also, we can only show 16 items for maximum in one context menu handler, I have used the Google but I can’t find any documents from Microsoft for describing the limitation. But I know the separator is not counted in the limitation, andyou can define multiple context menu handlers to bypass the limitation.</p><p>As we all know, the context menu in Windows 11 will cascade items from apps with more than 1 verb. So I suggest you make your context menu only in cascaded mode for a universal user experience when the user uses the legacy context menuvia clicking “Show more options”.</p><h2 id="The-choices-when-I-implement-the-NanaZip"><a href="#The-choices-when-I-implement-the-NanaZip" class="headerlink" title="The choices when I implement the NanaZip"></a>The choices when I implement the NanaZip</h2><p>I had chosen packaging NanaZip into the MSIX package because I wanted to submit it to the Microsoft Store.</p><p>Due to the limitations of the context menu in Windows 11, NanaZip only have the cascaded mode and merge CRC SHA itemsinto the archiver items and split them with the separator.</p><h2 id="My-suggestions-for-Microsoft"><a href="#My-suggestions-for-Microsoft" class="headerlink" title="My suggestions for Microsoft"></a>My suggestions for Microsoft</h2><p>I hope we have a modern way to implement the drag-and-drop context menu. </p><p>The App Model should be more polished, many Windows instances can’t load the context menu from third-party packaged appbefore restarting the File Explorer via Task Manager.</p><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>As a 7-Zip enthusiast and an open-source lover. I want everyone not only to know this is a 7-Zip derivative, but alsoto make people know it’s a project created by me.</p><p>I have searched for a proper name for half a month, and finally I decided to use NanaZip as the name of file archiver. Here are the reasons.</p><ul><li>All names of the user-oriented open-source projects created by myself is started with the <code>N</code> letter because my ID is<code>MouriNaruto</code>, some of my friends use <code>N-series</code> to call projects created by me.</li><li><code>Nana</code> is the romaji of <code>なな</code>, means seven in Japanese. It will make people know NanaZip is a 7-Zip derivative if they know a little Japanese because this is a pun which is easy to understand.</li><li>The return value of <code>strlen(&quot;NanaZip&quot;)</code> is 7, it’s also a nice pun.</li></ul><p>This is the first article of development stories from projects created or maintained by me. I will write more.</p><p>I hope the article can give some help for Windows desktop app developers. Thanks for reading.</p>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Apps</category>
      
      <category>Development</category>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Apps</tag>
      
      <tag>Development</tag>
      
      <tag>Experience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use VC-LTL in your C++/WinRT UWP projects</title>
    <link href="/en/2021/11/25/Use-VC-LTL-in-your-Cpp-WinRT-UWP-projects/"/>
    <url>/en/2021/11/25/Use-VC-LTL-in-your-Cpp-WinRT-UWP-projects/</url>
    
    <content type="html"><![CDATA[<p>VC-LTL is a build toolchain that allows developers to use the Windows built-in C runtime libraries elegantly. It allowsyou to write binaries that only rely on the Windows built-in <code>msvcrt.dll</code> or <code>ucrtbase.dll</code> for the C runtime library. This allows you to achieve the goal of avoiding the deployment of additional MSVC libraries, solving the FLS cap issue and reducing the size of the binary significantly.</p><p>As an enthusiastic user of VC-LTL and want to ensure that my UWP has no additional dependencies, I have attempted to use VC-LTL in my UWP project and surprisingly made it work, so I decided to write an article about it for reference.</p><p>Read <a href="https://mouri.moe/zh/2021/11/25/Use-VC-LTL-in-your-Cpp-WinRT-UWP-projects/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><h2 id="Add-VC-LTL-to-your-UWP-projects"><a href="#Add-VC-LTL-to-your-UWP-projects" class="headerlink" title="Add VC-LTL to your UWP projects"></a>Add VC-LTL to your UWP projects</h2><p>Since VC-LTL is also released as NuGet package, you just need to install it by searching for VC-LTL in the Manage NuGetpackages in the right click of the project in Visual Studio.</p><p>Note: You need to choose 5.0 or later for VC-LTL package.</p><h2 id="Hacking-the-UWP-project-configuration"><a href="#Hacking-the-UWP-project-configuration" class="headerlink" title="Hacking the UWP project configuration"></a>Hacking the UWP project configuration</h2><p>Since UWP projects do not support linking to C runtime by default and the generated application manifest contains VCLibs dependencies by default, so we need to do some hacking.</p><p>First we need to add <code>kernel32.lib</code>, <code>ole32.lib</code> and <code>oleaut32.lib</code> as additional dependencies in the compiler propertypages for all configurations of all platforms in Visual Studio, Then open the <code>.vcxproj</code> configuration file for the UWPproject we need to hack with an editor other than Visual Studio that you are comfortable with, find the <code>PropertyGroup Label=&quot;Globals&quot;</code> node and add <code>&lt;_VC_Target_Library_Platform&gt; Desktop&lt;/_VC_Target_Library_Platform&gt;</code> to allow the MSBuild C++ build toolchain to be handled as a desktop application to resolve the issue of not supporting linking to the C runtime library for UWP projects by default.</p><p>Then find the <code>PropertyGroup Label=&quot;Globals&quot;</code> node in the <code>.vcxproj</code> configuration file for the UWP project we need to hack and add <code>&lt;UseCrtSDKReference&gt;false&lt;/UseCrtSDKReference&gt;</code> and add the following to the end of the <code>Project</code> node toresolve the issue of generated application manifest contains VCLibs dependencies by default.</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- ## BEGIN HACK - Removing Microsoft.VCLibs Packages ## --&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  Reference: https://github.com/microsoft/terminal</span><br><span class="hljs-comment">             /blob/a89c3e2f8527a51b39768980627ed8f7c1ea5f0b</span><br><span class="hljs-comment">             /src/cascadia/CascadiaPackage/CascadiaPackage.wapproj#L125</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">  For our builds, we&#x27;re just using VC-LTL to compile the project and delete</span><br><span class="hljs-comment">  the package dependencies. We don&#x27;t want to rely on the Microsoft.VCLibs </span><br><span class="hljs-comment">  packages. Because it&#x27;s very difficult for users who do not have access to </span><br><span class="hljs-comment">  the store to get our dependency packages, and we want to be robust and </span><br><span class="hljs-comment">  deployable everywhere.</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  This target removes the FrameworkSdkReferences from before the AppX package</span><br><span class="hljs-comment">  targets manifest generation happens. This is part of the generic machinery </span><br><span class="hljs-comment">  that applies to every AppX. </span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Target</span> <span class="hljs-attr">Name</span>=<span class="hljs-string">&quot;_StripAllDependenciesFromPackageFirstManifest&quot;</span> <span class="hljs-attr">BeforeTargets</span>=<span class="hljs-string">&quot;_GenerateCurrentProjectAppxManifest&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ItemGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">FrameworkSdkReference</span> <span class="hljs-attr">Remove</span>=<span class="hljs-string">&quot;@(FrameworkSdkReference)&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ItemGroup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Target</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  This target removes the FrameworkSdkPackages from before the *desktop </span><br><span class="hljs-comment">  bridge* manifest generation happens. </span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Target</span> <span class="hljs-attr">Name</span>=<span class="hljs-string">&quot;_StripAllDependenciesFromPackageSecondManifest&quot;</span> <span class="hljs-attr">BeforeTargets</span>=<span class="hljs-string">&quot;_GenerateDesktopBridgeAppxManifest&quot;</span> <span class="hljs-attr">DependsOnTargets</span>=<span class="hljs-string">&quot;_ResolveVCLibDependencies&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ItemGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">FrameworkSdkPackage</span> <span class="hljs-attr">Remove</span>=<span class="hljs-string">&quot;@(FrameworkSdkPackage)&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ItemGroup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Target</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ## END HACK - Removing Microsoft.VCLibs Packages ## --&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Afterword"><a href="#Afterword" class="headerlink" title="Afterword"></a>Afterword</h2><p>For developers who want to develop modern Windows applications, the source code of Windows Terminal is really an inexhaustible treasure, which involves a lot of magic tricks plus the frustrations from the development team about thetoolchain for developing modern Windows applications.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://github.com/Chuyu-Team/VC-LTL5">Project website of VC-LTL 5.x</a></li><li><a href="https://github.com/microsoft/terminal">Source code repository of Windows Terminal</a></li></ul><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a>See also</h2><a href="/en/2021/11/02/Windows-Research-Notes/" title="Windows Research Notes">Windows Research Notes</a>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
      <category>Development Environment</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
      <tag>Development Environment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Build Qt 6 with VC-LTL</title>
    <link href="/en/2021/11/23/Build-Qt-6-with-VC-LTL/"/>
    <url>/en/2021/11/23/Build-Qt-6-with-VC-LTL/</url>
    
    <content type="html"><![CDATA[<p>Last week I talked with my friend <a href="https://github.com/wangwenx190">wangwenx190</a> for some advice on compiling Qt 6 source code with the VC-LTL toolchain. After several hours of discussions, I made a lot of progress, but the –debug-and-release mode of Qt 6’s configure.bat didn’t work, and I was stuck because I don’t use CMake very often.A few days later, my friend gave VC-LTL a PR to resolve the issue, so I summarized the approach in this article.</p><p>Read <a href="https://mouri.moe/zh/2021/11/23/Build-Qt-6-with-VC-LTL/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><p>This article assumes that you have already configured a basic environment for compiling Qt 6 source code, because themain purpose of this article is to describe how to compile Qt 6 source code with VC-LTL to make your compiled Qt 6binaries only rely on the Windows built-in <code>msvcrt.dll</code> or <code>ucrtbase.dll</code> as the C runtime library for achieving the goal of deploying without additional MSVC runtime library.</p><p>First you need to download the latest version of VC-LTL binary package from <a href="https://github.com/Chuyu-Team/VC-LTL5/releases">https://github.com/Chuyu-Team/VC-LTL5/releases</a> ( the latest version of VC-LTL is named <code>VC-LTL-5.0.3-Beta1-Binary.7z</code>at the time of writing this article for example) and Unzip the package to a directory with only English characters ( <code>C:\Tools\VC-LTL</code> in this example) and run <code>Install.cmd</code> in the extracted directory to register the directory of VC-LTL’s toolchain to the system.</p><p>Then modify <code>config/config.cmake</code> in the VC-LTL toolchain directory according to <a href="https://github.com/Chuyu-Team/VC-LTL5/pull/14">wangwenx190’s PR for VC-LTL</a>, i.e. find line 19 in that file. If youfind the following, just remove them and save the file.</p><figure class="highlight stylus"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">if</span><span class="hljs-params">($&#123;SupportLTL&#125; STREQUAL <span class="hljs-string">&quot;true&quot;</span>)</span></span><br><span class="hljs-built_in">if</span>(NOT CMAKE_BUILD_TYPE)<br><span class="hljs-built_in">message</span>(WARNING <span class="hljs-string">&quot;VC-LTL not load, because CMAKE_BUILD_TYPE is not defined!!!&quot;</span>)<br><span class="hljs-built_in">set</span>(SupportLTL <span class="hljs-string">&quot;false&quot;</span>)<br><span class="hljs-built_in">endif</span>()<br><span class="hljs-function"><span class="hljs-title">endif</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><p>Then copy the <code>VC-LTL helper for cmake.cmake</code> file from the VC-LTL toolchain directory to the <code>qtbase/cmake/</code> subdirectory of the Qt source code directory and rename it to <code>VC-LTL.cmake</code>, and add the following to the end of <code>qtbase/cmake/QtBuild.cmake</code> and save the below content.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(WindowsTargetPlatformMinVersion <span class="hljs-number">10.0</span>.<span class="hljs-number">10240.0</span> CACHE STRING <span class="hljs-string">&quot;&quot;</span> FORCE)</span></span><br><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(CleanImport <span class="hljs-string">&quot;true&quot;</span> CACHE STRING <span class="hljs-string">&quot;&quot;</span> FORCE)</span></span><br><br><span class="hljs-function"><span class="hljs-title">include</span><span class="hljs-params">(VC-LTL)</span></span><br><br><span class="hljs-function"><span class="hljs-title">if</span><span class="hljs-params">(MSVC)</span></span><br>    <span class="hljs-built_in">set</span>(CMAKE_MSVC_RUNTIME_LIBRARY <span class="hljs-string">&quot;MultiThreaded$&lt;$&lt;CONFIG:Debug&gt;:Debug&gt;&quot;</span> CACHE STRING <span class="hljs-string">&quot;&quot;</span> FORCE)<br><span class="hljs-function"><span class="hljs-title">endif</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><p>Then you can follow the official Qt 6 build tutorial to build the Qt 6 binaries with the VC-LTL toolchain, with my Qt6 build commands listed by the way.</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-string">&quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat&quot;</span> amd64<br><span class="hljs-keyword">set</span> PATH=%~dp0qtbase\bin;<span class="hljs-title function_">%PATH</span>%<br>mkdir <span class="hljs-keyword">output</span>\x64<br>cd <span class="hljs-keyword">output</span>\x64<br><span class="hljs-keyword">call</span> ..\..\configure.bat -prefix <span class="hljs-string">&quot;C:\Workspace\Qt\6.2.1\msvc2019_64&quot;</span> -debug-<span class="hljs-keyword">and</span>-release -platform win32-msvc -opensource -confirm-license -shared -nomake examples -nomake tests -no-openssl -no-opengl -plugin-sql-sqlite -qt-zlib -qt-libpng -qt-libjpeg -mp -<span class="hljs-keyword">skip</span> qt3d -<span class="hljs-keyword">skip</span> qt5compat -<span class="hljs-keyword">skip</span> qtcharts -<span class="hljs-keyword">skip</span> qtcoap -<span class="hljs-keyword">skip</span> qtconnectivity -<span class="hljs-keyword">skip</span> qtdatavis3d -<span class="hljs-keyword">skip</span> qtdeclarative -<span class="hljs-keyword">skip</span> qtdoc -<span class="hljs-keyword">skip</span> qtlocation -<span class="hljs-keyword">skip</span> qtlottie -<span class="hljs-keyword">skip</span> qtmqtt -<span class="hljs-keyword">skip</span> qtmultimedia -<span class="hljs-keyword">skip</span> qtnetworkauth -<span class="hljs-keyword">skip</span> qtopcua -<span class="hljs-keyword">skip</span> qtquick3d -<span class="hljs-keyword">skip</span> qtquicktimeline -<span class="hljs-keyword">skip</span> qtremoteobjects -<span class="hljs-keyword">skip</span> qtscxml -<span class="hljs-keyword">skip</span> qtsensors -<span class="hljs-keyword">skip</span> qtserialbus -<span class="hljs-keyword">skip</span> qtserialport -<span class="hljs-keyword">skip</span> qtshadertools -<span class="hljs-keyword">skip</span> qtvirtualkeyboard -<span class="hljs-keyword">skip</span> qtwebchannel -<span class="hljs-keyword">skip</span> qtwebengine -<span class="hljs-keyword">skip</span> qtwebsockets -<span class="hljs-keyword">skip</span> qtwebview<br>ninja<br>ninja install<br></code></pre></td></tr></table></figure><p>I hope everyone has a smooth experience with Qt 6, thanks for reading.</p><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a>See also</h2><a href="/en/2021/11/02/Windows-Research-Notes/" title="Windows Research Notes">Windows Research Notes</a>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
      <category>Development Environment</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
      <tag>Development Environment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Defrag memory with NT API</title>
    <link href="/en/2021/11/14/Defrag-memory-with-NT-API/"/>
    <url>/en/2021/11/14/Defrag-memory-with-NT-API/</url>
    
    <content type="html"><![CDATA[<p>The memory fragmentation is inevitable when the system is running, this can affect the system performance, so it is necessary to defrag the memory at the proper time.</p><p>Most of the memory defragmentation tools on the market today achieve the goal through allocating as many memory blocksas possible from the system to squeeze as many memory blocks as possible into the swap file before releasing them. I donot think this is an elegant approach, because it requires that your tool must be running in Native mode instead of theWoW compatibility layer, for example, if your tool is 32-bit it can only request up to 4GB of memory from the system, which is not enough to achieve your goal. And since you are forcing the system to squeeze memory blocks into the swap file, it is not efficient and has a significant negative impact on the scheduling mechanism.</p><p>So, this article proposes a new way of memory defragmentation by calling the NT API to inform the kernel to move the memory blocks to the swap file automatically, so the process is very fast and has minimal impact on the scheduling mechanism.</p><p>Read <a href="https://mouri.moe/zh/2021/11/14/Defrag-memory-with-NT-API/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><h2 id="Inspiration-source"><a href="#Inspiration-source" class="headerlink" title="Inspiration source"></a>Inspiration source</h2><p>When I used the features in the Empty menu from RAMMap tool in Sysinternals Suite, I found we can defrag memory efficiently with the proper operations.</p><p>So I used IDA Pro to analyze the features related to the RAMMap tool, and summarize my conclusions and write thisarticle with examples.</p><h2 id="Operation-method"><a href="#Operation-method" class="headerlink" title="Operation method"></a>Operation method</h2><p>You need to run your binary as administrator.</p><p>First enable the SeProfileSingleProcessPrivilege privilege for the current process, then call NtSetSystemInformationand pass MemoryEmptyWorkingSets, MemoryFlushModifiedList and MemoryPurgeStandbyList to SystemMemoryListInformation toperform memory defragmentation.</p><h2 id="Code-example"><a href="#Code-example" class="headerlink" title="Code example"></a>Code example</h2><p>The following example rely on the NT API definitions from <a href="https://github.com/Chuyu-Team/MINT">https://github.com/Chuyu-Team/MINT</a> created by myself.</p><figure class="highlight nsis"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></div></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment">#include &lt;MINT.h&gt;</span><br><br>namespace<br>&#123;<br>    static HRESULT DefragMemory()<br>    &#123;<br>        using NtSet<span class="hljs-params">System</span>InformationType = decltype(::NtSet<span class="hljs-params">System</span>Information)*<span class="hljs-comment">;</span><br>        using RtlNtStatusToDosErrorType = decltype(::RtlNtStatusToDosError)*<span class="hljs-comment">;</span><br><br>        NtSet<span class="hljs-params">System</span>InformationType pNtSet<span class="hljs-params">System</span>Information = nullptr<span class="hljs-comment">;</span><br>        RtlNtStatusToDosErrorType pRtlNtStatusToDosError = nullptr<span class="hljs-comment">;</span><br><br>        HMODULE ModuleHandle = ::GetModuleHandleW(L<span class="hljs-string">&quot;ntdll.dll&quot;</span>)<span class="hljs-comment">;</span><br>        if (!ModuleHandle)<br>        &#123;<br>            <span class="hljs-keyword">return</span> E_NOINTERFACE<span class="hljs-comment">;</span><br>        &#125;<br><br>        pNtSet<span class="hljs-params">System</span>Information = reinterpret_cast&lt;NtSet<span class="hljs-params">System</span>InformationType&gt;(<br>            ::GetProcAddress(ModuleHandle, <span class="hljs-string">&quot;NtSetSystemInformation&quot;</span>))<span class="hljs-comment">;</span><br>        if (!pNtSet<span class="hljs-params">System</span>Information)<br>        &#123;<br>            <span class="hljs-keyword">return</span> E_NOINTERFACE<span class="hljs-comment">;</span><br>        &#125;<br><br>        pRtlNtStatusToDosError = reinterpret_cast&lt;RtlNtStatusToDosErrorType&gt;(<br>            ::GetProcAddress(ModuleHandle, <span class="hljs-string">&quot;RtlNtStatusToDosError&quot;</span>))<span class="hljs-comment">;</span><br>        if (!pRtlNtStatusToDosError)<br>        &#123;<br>            <span class="hljs-keyword">return</span> E_NOINTERFACE<span class="hljs-comment">;</span><br>        &#125;<br><br>        // Working Sets -&gt; Modified <span class="hljs-keyword">Page</span> List -&gt; Standby List<br><br>        <span class="hljs-params">SYSTEM</span>_MEMORY_LIST_COMMAND CommandList[] =<br>        &#123;<br>            <span class="hljs-params">SYSTEM</span><span class="hljs-title function_">_MEMORY_LIST_COMMAND::MemoryEmptyWorkingSets</span>,<br>            <span class="hljs-params">SYSTEM</span><span class="hljs-title function_">_MEMORY_LIST_COMMAND::MemoryFlushModifiedList</span>,<br>            <span class="hljs-params">SYSTEM</span><span class="hljs-title function_">_MEMORY_LIST_COMMAND::MemoryPurgeStandbyList</span><br>        &#125;<span class="hljs-comment">;</span><br><br>        NTSTATUS Status = STATUS_SUCCESS<span class="hljs-comment">;</span><br><br>        for (size_t i = <span class="hljs-number">0</span><span class="hljs-comment">; i &lt; sizeof(CommandList) / sizeof(*CommandList); ++i)</span><br>        &#123;<br>            Status = pNtSet<span class="hljs-params">System</span>Information(<br>                <span class="hljs-params">System</span>MemoryListInformation,<br>                &amp;CommandList[i],<br>                sizeof(<span class="hljs-params">SYSTEM</span>_MEMORY_LIST_COMMAND))<span class="hljs-comment">;</span><br>            if (!NT_SUCCESS(Status))<br>            &#123;<br>                break<span class="hljs-comment">;</span><br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">Mile::HResult</span>::FromWin32(pRtlNtStatusToDosError(Status))<span class="hljs-comment">;</span><br>    &#125;<br>&#125;<br><br>EXTERN_C HRESULT WINAPI MoDefragMemory(<br>    _In_ PNSUDO_CONTEXT Context)<br>&#123;<br>    <span class="hljs-title function_">Mile::HResult</span> hr = S_OK<span class="hljs-comment">;</span><br>    HANDLE CurrentProcessToken = INVALID_HANDLE_VALUE<span class="hljs-comment">;</span><br><br>    if (::OpenProcessToken(<br>        ::GetCurrentProcess(),<br>        MAXIMUM_ALLOWED,<br>        &amp;CurrentProcessToken))<br>    &#123;<br>        LUID_AND_ATTRIBUTES RawPrivilege<span class="hljs-comment">;</span><br>        RawPrivilege.Attributes = SE_PRIVILEGE_ENABLED<span class="hljs-comment">;</span><br>        if (::LookupPrivilegeValueW(<br>            nullptr,<br>            SE_PROF_SINGLE_PROCESS_NAME,<br>            &amp;RawPrivilege.Luid))<br>        &#123;<br>            hr = <span class="hljs-title function_">Mile::AdjustTokenPrivilegesSimple</span>(<br>                CurrentProcessToken,<br>                &amp;RawPrivilege,<br>                <span class="hljs-number">1</span>)<span class="hljs-comment">;</span><br>            if (hr.IsSucceeded())<br>            &#123;<br>                hr = ::DefragMemory()<span class="hljs-comment">;</span><br>            &#125;<br>        &#125;<br><br>        ::CloseHandle(CurrentProcessToken)<span class="hljs-comment">;</span><br>    &#125;<br><br>    <span class="hljs-keyword">return</span> hr<span class="hljs-comment">;</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a>See also</h2><a href="/en/2021/11/02/Windows-Research-Notes/" title="Windows Research Notes">Windows Research Notes</a>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
      <category>User Mode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
      <tag>User Mode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Using System Restore via C#</title>
    <link href="/en/2021/11/14/Using-System-Restore-via-CSharp/"/>
    <url>/en/2021/11/14/Using-System-Restore-via-CSharp/</url>
    
    <content type="html"><![CDATA[<p>This article summarizes how to use System Restore via C#.</p><p>Read <a href="https://mouri.moe/zh/2021/11/14/Using-System-Restore-with-CSharp/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><h2 id="Create-a-system-restore-point-via-Win32-API"><a href="#Create-a-system-restore-point-via-Win32-API" class="headerlink" title="Create a system restore point via Win32 API"></a>Create a system restore point via Win32 API</h2><figure class="highlight csharp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">StructLayout(LayoutKind.Sequential)</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> RESTOREPOINTINFO<br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> dwEventType;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> dwRestorePtType;<br>    <span class="hljs-keyword">public</span> Int64 llSequenceNumber;<br>    [<span class="hljs-meta">MarshalAs(UnmanagedType.ByValTStr, SizeConst = 257)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> szDescription;<br>&#125;<br><br>[<span class="hljs-meta">StructLayout(LayoutKind.Sequential)</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> STATEMGRSTATUS<br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">uint</span> nStatus;<br>    <span class="hljs-keyword">public</span> Int64 llSequenceNumber;<br>&#125;<br><br>[<span class="hljs-meta">DllImport(<span class="hljs-string">&quot;SrClient.dll&quot;</span>)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">extern</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">SRSetRestorePoint</span>(<span class="hljs-params"><span class="hljs-keyword">ref</span> RESTOREPOINTINFO SRPInfo, <span class="hljs-keyword">ref</span> STATEMGRSTATUS SRPStatus</span>)</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    RegistryKey SystemRestoreKey = Registry.LocalMachine.OpenSubKey(<span class="hljs-string">&quot;Software\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore&quot;</span>,<span class="hljs-literal">true</span>);<br>    SystemRestoreKey.SetValue(<span class="hljs-string">&quot;SystemRestorePointCreationFrequency&quot;</span>, <span class="hljs-number">0</span>,RegistryValueKind.DWord);<br><br>    <span class="hljs-built_in">bool</span> result = <span class="hljs-literal">false</span>;<br>    RESTOREPOINTINFO RPInfo = <span class="hljs-keyword">new</span> RESTOREPOINTINFO();<br>    STATEMGRSTATUS RPStatus = <span class="hljs-keyword">new</span> STATEMGRSTATUS();<br><br>    RPInfo.dwEventType = <span class="hljs-number">100</span>;<br>    RPInfo.dwRestorePtType = <span class="hljs-number">0</span>;<br>    RPInfo.llSequenceNumber = <span class="hljs-number">0</span>;<br>    RPInfo.szDescription = <span class="hljs-string">&quot;System Restore Point&quot;</span>;<br><br>    result = SRSetRestorePoint(<span class="hljs-keyword">ref</span> RPInfo, <span class="hljs-keyword">ref</span> RPStatus);<br><br>    SystemRestoreKey.DeleteValue(<span class="hljs-string">&quot;SystemRestorePointCreationFrequency&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Create-a-system-restore-point-via-WMI"><a href="#Create-a-system-restore-point-via-WMI" class="headerlink" title="Create a system restore point via WMI"></a>Create a system restore point via WMI</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-type">static</span> <span class="hljs-type">bool</span> <span class="hljs-title">CreateSRP</span><span class="hljs-params">(string RPName, <span class="hljs-type">int</span> RPType, <span class="hljs-type">int</span> EventType)</span></span><br><span class="hljs-function"></span>&#123;<br>    ManagementClass SRClass = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ManagementClass</span>(<span class="hljs-string">&quot;//./root/default:SystemRestore&quot;</span>);<br><br>    ManagementBaseObject SRArgs = SRClass.<span class="hljs-built_in">GetMethodParameters</span>(<span class="hljs-string">&quot;CreateRestorePoint&quot;</span>);<br>    SRArgs[<span class="hljs-string">&quot;Description&quot;</span>] = RPName;<br>    SRArgs[<span class="hljs-string">&quot;RestorePointType&quot;</span>] = RPType;<br>    SRArgs[<span class="hljs-string">&quot;EventType&quot;</span>] = EventType;<br><br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        ManagementBaseObject outParams = SRClass.<span class="hljs-built_in">InvokeMethod</span>(<span class="hljs-string">&quot;CreateRestorePoint&quot;</span>, SRArgs, <span class="hljs-keyword">new</span> <span class="hljs-built_in">InvokeMethodOptions</span>(null, System.TimeSpan.MaxValue));<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">catch</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">Main</span><span class="hljs-params">(string[] args)</span></span><br><span class="hljs-function"></span>&#123;<br>    value = <span class="hljs-built_in">CreateSRP</span>(<span class="hljs-string">&quot;System Restore Point&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>);<br>    <span class="hljs-keyword">if</span> (value == <span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Write</span>(<span class="hljs-string">&quot;Success&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Write</span>(<span class="hljs-string">&quot;Failed&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Read</span>();<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Remove-all-system-restore-points-via-AlphaVSS-library"><a href="#Remove-all-system-restore-points-via-AlphaVSS-library" class="headerlink" title="Remove all system restore points via AlphaVSS library"></a>Remove all system restore points via AlphaVSS library</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">using</span> <span class="hljs-keyword">System</span>;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">System</span>.Collections.Generic;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">System</span>.Linq;<br><span class="hljs-keyword">using</span> Alphaleonis.Win32.Vss;<br><br>namespace SRDemoVSS<br>&#123;<br>    <span class="hljs-keyword">class</span> Program<br>    &#123;<br>        static <span class="hljs-type">void</span> Main(string[] args)<br>        &#123;<br><br>            IVssImplementation vssImplementation = VssUtils.LoadImplementation();<br>            <span class="hljs-keyword">using</span> (IVssBackupComponents backupComponents = vssImplementation.CreateVssBackupComponents())<br>            &#123;<br>                backupComponents.InitializeForBackup(<span class="hljs-keyword">null</span>);<br><br>                backupComponents.SetContext(VssSnapshotContext.<span class="hljs-keyword">All</span>);<br><br>                IList&lt;VssSnapshotProperties&gt; snapshots = backupComponents.QuerySnapshots().ToArray();<br><br>                <span class="hljs-keyword">if</span> (snapshots.Count == <span class="hljs-number">0</span>)<br>                &#123;<br>                    Console.WriteLine(&quot;There were no shadow copies on the system.&quot;);<br>                    <span class="hljs-keyword">return</span>;<br>                &#125;<br><br>                try<br>                &#123;<br>                    <span class="hljs-keyword">foreach</span> (VssSnapshotProperties <span class="hljs-keyword">snapshot</span> <span class="hljs-keyword">in</span> snapshots)<br>                    &#123;<br>                        Console.WriteLine(<br>                            &quot;- Deleting shadow copy &#123;0:B&#125; on &#123;1&#125; from provider &#123;2&#125; [&#123;3&#125;]...&quot;, <br>                            <span class="hljs-keyword">snapshot</span>.SnapshotId,<br>                            <span class="hljs-keyword">snapshot</span>.OriginalVolumeName, <br>                            <span class="hljs-keyword">snapshot</span>.ProviderId, <br>                            <span class="hljs-keyword">snapshot</span>.SnapshotAttributes);<br>                        backupComponents.DeleteSnapshot(<span class="hljs-keyword">snapshot</span>.SnapshotId, <span class="hljs-keyword">false</span>);<br>                    &#125;<br>                &#125;<br>                finally &#123; &#125;<br><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Remove-all-system-restore-points-via-Win32-API-and-WMI"><a href="#Remove-all-system-restore-points-via-Win32-API-and-WMI" class="headerlink" title="Remove all system restore points via Win32 API and WMI"></a>Remove all system restore points via Win32 API and WMI</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Management;<br><span class="hljs-keyword">using</span> System.Runtime.InteropServices;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">SRDeleteDemoAPI</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        [<span class="hljs-meta">DllImport(<span class="hljs-string">&quot;SrClient.dll&quot;</span>)</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">extern</span> <span class="hljs-built_in">int</span> <span class="hljs-title">SRRemoveRestorePoint</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> dwRPNum</span>)</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                ManagementObjectSearcher SRObject = <span class="hljs-keyword">new</span> ManagementObjectSearcher(<span class="hljs-string">&quot;root/default&quot;</span>, <span class="hljs-string">&quot;SELECT * FROM SystemRestore&quot;</span>);<br>                <span class="hljs-keyword">foreach</span> (ManagementObject SRInfo <span class="hljs-keyword">in</span> SRObject.Get())<br>                &#123;<br>                    SRRemoveRestorePoint(Convert.ToInt32(SRInfo[<span class="hljs-string">&quot;SequenceNumber&quot;</span>].ToString()));<br>                &#125;<br>                Console.WriteLine(<span class="hljs-string">&quot;Success&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception)<br>            &#123;<br>                Console.WriteLine(<span class="hljs-string">&quot;Failure&quot;</span>);<br>            &#125;            <br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Restore-from-a-system-restore-point-via-WMI"><a href="#Restore-from-a-system-restore-point-via-WMI" class="headerlink" title="Restore from a system restore point via WMI"></a>Restore from a system restore point via WMI</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Management;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">RestoreFromRestorePoint</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> RPNum</span>)</span><br>&#123;<br>    ManagementClass SRClass = <span class="hljs-keyword">new</span> ManagementClass(<span class="hljs-string">&quot;//./root/default:SystemRestore&quot;</span>);<br><br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        <span class="hljs-built_in">object</span>[] SRArgs = &#123; RPNum &#125;;<br>        SRClass.InvokeMethod(<span class="hljs-string">&quot;Restore&quot;</span>, SRArgs);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">catch</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;   <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Enable-System-Restore-for-the-specific-drive-C-drive-for-example-via-Win32-API"><a href="#Enable-System-Restore-for-the-specific-drive-C-drive-for-example-via-Win32-API" class="headerlink" title="Enable System Restore for the specific drive (C drive for example) via Win32 API"></a>Enable System Restore for the specific drive (C drive for example) via Win32 API</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Runtime.InteropServices;<br><br><span class="hljs-keyword">namespace</span> SRTest<br>&#123;<br>        <span class="hljs-keyword">class</span> <span class="hljs-title class_">Program</span><br>        &#123;<br>                [<span class="hljs-built_in">DllImport</span>(<span class="hljs-string">&quot;SrClient.dll&quot;</span>)]<br>                <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title">EnableSR</span><span class="hljs-params">([MarshalAs(UnmanagedType.LPWStr)]string Drive)</span></span>;<br>        <br>                <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">Main</span><span class="hljs-params">(string[] args)</span></span><br><span class="hljs-function">                </span>&#123;                        <br>                        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Write</span>(<span class="hljs-built_in">EnableSR</span>(<span class="hljs-string">&quot;C:\\&quot;</span>));<br>                                                <br>                        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Write</span>(<span class="hljs-string">&quot;Press any key to continue . . . &quot;</span>);<br>                        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">ReadKey</span>(<span class="hljs-literal">true</span>);<br>                &#125;<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Disable-System-Restore-for-the-specific-drive-C-drive-for-example-via-Win32-API"><a href="#Disable-System-Restore-for-the-specific-drive-C-drive-for-example-via-Win32-API" class="headerlink" title="Disable System Restore for the specific drive (C drive for example) via Win32 API"></a>Disable System Restore for the specific drive (C drive for example) via Win32 API</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Runtime.InteropServices;<br><br><span class="hljs-keyword">namespace</span> SRTest<br>&#123;<br>        <span class="hljs-keyword">class</span> <span class="hljs-title class_">Program</span><br>        &#123;<br>                [<span class="hljs-built_in">DllImport</span>(<span class="hljs-string">&quot;SrClient.dll&quot;</span>)]<br>                <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title">DisableSR</span><span class="hljs-params">([MarshalAs(UnmanagedType.LPWStr)]string Drive)</span></span>;      <br>        <br>                <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">Main</span><span class="hljs-params">(string[] args)</span></span><br><span class="hljs-function">                </span>&#123;                        <br>                        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Write</span>(<span class="hljs-built_in">DisableSR</span>(<span class="hljs-string">&quot;C:\\&quot;</span>));<br>                                                <br>                        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">Write</span>(<span class="hljs-string">&quot;Press any key to continue . . . &quot;</span>);<br>                        <span class="hljs-built_in">Console</span>.<span class="hljs-built_in">ReadKey</span>(<span class="hljs-literal">true</span>);<br>                &#125;<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://bbs.pcbeta.com/viewthread-1507617-1-1.html">Windows系统还原新探（Windows系统还原的较深入研究）</a></li></ul><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a>See also</h2><ul><li><a href="#">Post not found: The-usage-of-System-Restore</a></li><li><a href="/en/2021/11/02/Windows-Research-Notes/" title="Windows Research Notes">Windows Research Notes</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
      <category>System Restore</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
      <tag>System Restore</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Launch Windows Store App via Win32 API</title>
    <link href="/en/2021/11/07/Launch-Windows-Store-App-via-Win32-API/"/>
    <url>/en/2021/11/07/Launch-Windows-Store-App-via-Win32-API/</url>
    
    <content type="html"><![CDATA[<p>This article describes how to launch a store app via command line and Win32 API.</p><p>Read <a href="https://mouri.moe/zh/2021/11/07/Launch-Windows-Store-App-via-Win32-API/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><h2 id="Get-the-available-Windows-Store-app-entries"><a href="#Get-the-available-Windows-Store-app-entries" class="headerlink" title="Get the available Windows Store app entries"></a>Get the available Windows Store app entries</h2><p>First, paste the following command in PowerShell to get the available Windows Store app entries on your machine.</p><figure class="highlight powershell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$installedapps</span> = <span class="hljs-built_in">get-AppxPackage</span><br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$app</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$installedapps</span>)<br>&#123;<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$id</span> <span class="hljs-keyword">in</span> (<span class="hljs-built_in">Get-AppxPackageManifest</span> <span class="hljs-variable">$app</span>).package.applications.application.id)<br>    &#123;<br>        <span class="hljs-variable">$app</span>.packagefamilyname + <span class="hljs-string">&quot;!&quot;</span> + <span class="hljs-variable">$id</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Calling these on my Windows 11 machine returned the following available entries for launching the Windows Store app.</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs llvm">Microsoft.XboxGameOverlay_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.XboxSpeechToTextOverlay_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.Xbox.TCUI_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.Xbox.TCUI</span><br>Microsoft.XboxApp_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.XboxApp</span><br>Microsoft.WindowsSoundRecorder_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.People_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!x4c7a3b7dy2188y46d4ya362y19ac5a5805e5x</span><br>Microsoft.MicrosoftStickyNotes_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.MixedReality.Portal_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>RivetNetworks.KillerControlCenter_rh<span class="hljs-number">07</span>ty<span class="hljs-number">8</span>m<span class="hljs-number">5</span>nkag<span class="hljs-title">!RivetNetworks.KillerControlCenter</span><br>RealtekSemiconductorCorp.RealtekAudioControl_dt<span class="hljs-number">26</span>b<span class="hljs-number">99</span>r<span class="hljs-number">8</span>h<span class="hljs-number">8</span>gj<span class="hljs-title">!App</span><br>Microsoft.MicrosoftOfficeHub_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.MicrosoftOfficeHub</span><br>Microsoft.MicrosoftOfficeHub_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!LocalBridge</span><br>Microsoft.MicrosoftOfficeHub_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!OfficeHubHWA</span><br>AppUp.IntelGraphicsExperience_<span class="hljs-number">8</span>j<span class="hljs-number">3</span><span class="hljs-keyword">eq</span><span class="hljs-number">9</span>eme<span class="hljs-number">6</span>ctt<span class="hljs-title">!App</span><br>AppUp.ThunderboltControlCenter_<span class="hljs-number">8</span>j<span class="hljs-number">3</span><span class="hljs-keyword">eq</span><span class="hljs-number">9</span>eme<span class="hljs-number">6</span>ctt<span class="hljs-title">!App</span><br>Microsoft.XboxIdentityProvider_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.XboxIdentityProvider</span><br>Microsoft.WebMediaExtensions_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.BingWeather_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.GetHelp_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WebpImageExtension_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.BioEnrollment_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.CloudExperienceHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.AAD.BrokerPlugin_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.OOBENetworkConnectionFlow_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.OOBENetworkCaptivePortal_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.StartMenuExperienceHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.ShellExperienceHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>windows.immersivecontrolpanel_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!microsoft.windows.immersivecontrolpanel</span><br>Microsoft.Windows.Search_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!CortanaUI</span><br>Microsoft.Windows.Search_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!ShellFeedsUI</span><br>Microsoft.Windows.Search_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!FESearchUI</span><br>Microsoft.MicrosoftEdge_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!MicrosoftEdge</span><br>Microsoft.MicrosoftEdge_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!PdfReader</span><br>Microsoft.Windows.ContentDeliveryManager_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.SecHealthUI_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!SecHealthUI</span><br>Microsoft.Windows.CallingShellApp_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.Windows.CallingShellApp</span><br>Microsoft.Windows.AssignedAccessLockApp_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.CapturePicker_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.Apprep.ChxApp_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.NarratorQuickStart_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.Win<span class="hljs-number">32</span>WebViewHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!DPI.PerMonitorAware</span><br>Microsoft.Win<span class="hljs-number">32</span>WebViewHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!DPI.SystemAware</span><br>Microsoft.Win<span class="hljs-number">32</span>WebViewHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!DPI.Unaware</span><br>Microsoft.Windows.ParentalControls_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br><span class="hljs-number">1527</span><span class="hljs-keyword">c</span><span class="hljs-number">705</span><span class="hljs-number">-839</span>a<span class="hljs-number">-4832</span><span class="hljs-number">-9118</span><span class="hljs-number">-54</span>d<span class="hljs-number">4</span>Bd<span class="hljs-number">6</span>a<span class="hljs-number">0</span><span class="hljs-keyword">c</span><span class="hljs-number">89</span>_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.Windows.FilePicker</span><br>Windows.PrintDialog_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.Windows.PrintDialog</span><br>Windows.CBSPreview_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.Windows.CBSPreview</span><br>NcsiUwpApp_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.XboxGameCallableUI_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.XboxGameCallableUI</span><br>Microsoft.Windows.XGpuEjectDialog_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.Windows.XGpuEjectDialog</span><br>Microsoft.Windows.SecureAssessmentBrowser_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.PinningConfirmationDialog_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.Windows.PeopleExperienceHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.PPIProjection_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.PPIProjection</span><br>Microsoft.MicrosoftEdgeDevToolsClient_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.LockApp_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!WindowsDefaultLockScreen</span><br>Microsoft.ECApp_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.CredDialogHost_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.AsyncTextService_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.AccountsControl_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>F<span class="hljs-number">46</span>D<span class="hljs-number">4000</span>-FD<span class="hljs-number">22</span><span class="hljs-number">-4</span>DB<span class="hljs-number">4</span>-AC<span class="hljs-number">8E-4</span>E<span class="hljs-number">1</span>DDDE<span class="hljs-number">828</span>FE_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>E<span class="hljs-number">2</span>A<span class="hljs-number">4</span>F<span class="hljs-number">912</span><span class="hljs-number">-2574</span><span class="hljs-number">-4</span>A<span class="hljs-number">75</span><span class="hljs-number">-9</span>BB<span class="hljs-number">0</span><span class="hljs-number">-0</span>D<span class="hljs-number">023378592</span>B_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Microsoft.Windows.AppResolverUX</span><br><span class="hljs-keyword">c</span><span class="hljs-number">5e2524</span>a-ea<span class="hljs-number">46</span><span class="hljs-number">-4</span>f<span class="hljs-number">67</span><span class="hljs-number">-841</span>f<span class="hljs-number">-6</span>a<span class="hljs-number">9465</span>d<span class="hljs-number">9</span>d<span class="hljs-number">515</span>_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.ZuneVideo_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.ZuneVideo</span><br>Microsoft.ZuneMusic_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.ZuneMusic</span><br>Microsoft.GamingApp_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!Microsoft.Xbox.App</span><br>Microsoft.BingNews_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!AppexNews</span><br>Microsoft.Getstarted_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.DesktopAppInstaller_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.DesktopAppInstaller_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!PythonRedirector</span><br>Microsoft.DesktopAppInstaller_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!winget</span><br>Microsoft.WindowsNotepad_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WindowsMaps_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>MicrosoftTeams_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!MicrosoftTeams</span><br>MicrosoftTeams_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!msteamsupdate</span><br>Microsoft.Paint_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.<span class="hljs-number">549981</span>C<span class="hljs-number">3</span>F<span class="hljs-number">5</span>F<span class="hljs-number">10</span>_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.LanguageExperiencePackzh-CN_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br><span class="hljs-number">40174</span>MouriNaruto.NanaZip_gnj<span class="hljs-number">4</span>mf<span class="hljs-number">6</span>z<span class="hljs-number">9</span>tkrc<span class="hljs-title">!NanaZipC</span><br><span class="hljs-number">40174</span>MouriNaruto.NanaZip_gnj<span class="hljs-number">4</span>mf<span class="hljs-number">6</span>z<span class="hljs-number">9</span>tkrc<span class="hljs-title">!NanaZipG</span><br><span class="hljs-number">40174</span>MouriNaruto.NanaZip_gnj<span class="hljs-number">4</span>mf<span class="hljs-number">6</span>z<span class="hljs-number">9</span>tkrc<span class="hljs-title">!NanaZip</span><br><span class="hljs-number">9426</span>MICRO-STARINTERNATION.MSICenter_kzh<span class="hljs-number">8</span>wxbdkxb<span class="hljs-number">8</span>p<span class="hljs-title">!App</span><br>Microsoft.HEIFImageExtension_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>NVIDIACorp.NVIDIAControlPanel_<span class="hljs-number">56</span>jybvy<span class="hljs-number">8</span>sckqj<span class="hljs-title">!NVIDIACorp.NVIDIAControlPanel</span><br>Microsoft.VP<span class="hljs-number">9</span>VideoExtensions_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!PackageMetadata</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.Accounts</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.AppListBackup</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.FileExplorerExtensions</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.HardwareConfirmator</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.SnapLayout</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.SystemTray</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.Taskbar</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!InputApp</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.IrisService</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!ScreenClipping</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!MiniSearchUI</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!CortanaUI</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!FESearchUI</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.StartMenu</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.ValueBanner</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!WebExperienceHost</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.ExperienceExtensions</span><br>MicrosoftWindows.Client.CBS_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!Global.WsxPackManager</span><br>Microsoft.PowerAutomateDesktop_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!PAD.Console</span><br>Microsoft.RemoteDesktop_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.ScreenSketch_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.StorePurchaseApp_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WindowsTerminal_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WindowsCamera_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WindowsAlarms_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WindowsCalculator_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.MicrosoftSolitaireCollection_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>microsoft.windowscommunicationsapps_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!microsoft.windowslive.mail</span><br>microsoft.windowscommunicationsapps_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!microsoft.windowslive.calendar</span><br>microsoft.windowscommunicationsapps_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!microsoft.windowslive.manageaccounts</span><br>Microsoft.Todos_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.Windows.Photos_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.Windows.Photos_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!SecondaryEntry</span><br>Microsoft.WindowsFeedbackHub_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.WindowsStore_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>MicrosoftWindows.Client.WebExperience_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!PackageMetadata</span><br>MicrosoftWindows.Client.WebExperience_cw<span class="hljs-number">5</span>n<span class="hljs-number">1</span>h<span class="hljs-number">2</span>txyewy<span class="hljs-title">!App</span><br>Microsoft.YourPhone_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.MicrosoftEdge.Stable_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br>Microsoft.OneDriveSync_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!OneDrive</span><br>Microsoft.XboxGamingOverlay_<span class="hljs-number">8</span>wekyb<span class="hljs-number">3</span>d<span class="hljs-number">8</span>bbwe<span class="hljs-title">!App</span><br></code></pre></td></tr></table></figure><h2 id="Command-line-usage"><a href="#Command-line-usage" class="headerlink" title="Command line usage"></a>Command line usage</h2><p>To launch a Windows Store application via the command line, the common usage is using <code>explorer.exe</code> via command line.</p><blockquote><p>explorer.exe “shell:AppsFolder\The Windows Store app entry you want to launch”</p></blockquote><h2 id="Win32-API-usage"><a href="#Win32-API-usage" class="headerlink" title="Win32 API usage"></a>Win32 API usage</h2><p>You can launch a Windows Store application elegantly from your application through the <code>IApplicationActivationManager</code>interface, here is the code example.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;shobjidl.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HRESULT hr = ::<span class="hljs-built_in">CoInitializeEx</span>(<span class="hljs-literal">nullptr</span>, COINIT_APARTMENTTHREADED);<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">SUCCEEDED</span>(hr))<br>&#123;<br>IApplicationActivationManager* pApplicationActivationManager = <span class="hljs-literal">nullptr</span>;<br>hr = ::<span class="hljs-built_in">CoCreateInstance</span>(<br>CLSID_ApplicationActivationManager,<br><span class="hljs-literal">nullptr</span>,<br>CLSCTX_LOCAL_SERVER,<br>IID_IApplicationActivationManager,<br>(LPVOID*)&amp;pApplicationActivationManager);<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">SUCCEEDED</span>(hr))<br>&#123;<br><span class="hljs-comment">// This call ensures that the app is launched as the foreground window</span><br>hr = ::<span class="hljs-built_in">CoAllowSetForegroundWindow</span>(<br>pApplicationActivationManager, <br><span class="hljs-literal">nullptr</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">SUCCEEDED</span>(hr))<br>&#123;<br>DWORD dwProcessId = <span class="hljs-number">0</span>;<br><span class="hljs-comment">// Launch the app</span><br>hr = pApplicationActivationManager-&gt;<span class="hljs-built_in">ActivateApplication</span>(<br><span class="hljs-string">L&quot;The Windows Store app entry you want to launch&quot;</span>,<br><span class="hljs-literal">nullptr</span>,<br>AO_NONE,<br>&amp;dwProcessId);<br>&#125;<br><br>pApplicationActivationManager-&gt;<span class="hljs-built_in">Release</span>();<br>&#125;<br><br>::<span class="hljs-built_in">CoUninitialize</span>();<br>&#125;<br><br>    <span class="hljs-keyword">return</span> hr;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-iapplicationactivationmanager?WT.mc_id=WDIT-MVP-5004706">IApplicationActivationManager</a></li></ul><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a>See also</h2><a href="/en/2021/11/02/Windows-Research-Notes/" title="Windows Research Notes">Windows Research Notes</a>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
      <category>User Mode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
      <tag>User Mode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use VC-LTL in your Rust projects</title>
    <link href="/en/2021/11/04/Use-VC-LTL-in-your-Rust-projects/"/>
    <url>/en/2021/11/04/Use-VC-LTL-in-your-Rust-projects/</url>
    
    <content type="html"><![CDATA[<p>VC-LTL is a build toolchain that allows developers to use the Windows built-in C runtime libraries elegantly. It allowsyou to write binaries that only rely on the Windows built-in <code>msvcrt.dll</code> or <code>ucrtbase.dll</code> for the C runtime library. This allows you to achieve the goal of avoiding the deployment of additional MSVC libraries, solving the FLS cap issue and reducing the size of the binary significantly.</p><p>Read <a href="https://mouri.moe/zh/2021/11/04/Use-VC-LTL-in-your-Rust-projects/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><p>Since I have contributed the implementation of Rust language support to the VC-LTL 5.x source code repository recently,see <a href="https://github.com/Chuyu-Team/VC-LTL5/pull/11">here</a> for details.</p><p>So readers of this article can simply add the following to <code>[dependencies]</code> in the <code>Cargo.toml</code> file.</p><figure class="highlight abnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">vc-ltl</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;5.0.3-Beta1&quot;</span><br></code></pre></td></tr></table></figure><h2 id="For-VC-LTL-4-x-users"><a href="#For-VC-LTL-4-x-users" class="headerlink" title="For VC-LTL 4.x users"></a>For VC-LTL 4.x users</h2><p>For VC-LTL 4.x users, please read <a href="https://github.com/Chuyu-Team/vc-ltl-samples/tree/master/RustDemo">https://github.com/Chuyu-Team/vc-ltl-samples/tree/master/RustDemo</a>.</p><p>Since VC-LTL 5.x has been released, readers are strongly encouraged to upgrade to VC-LTL 5.x.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://github.com/Chuyu-Team/VC-LTL5">Project website of VC-LTL 5.x</a></li><li><a href="https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-cratesio">Specifying dependencies from crates.io</a></li></ul><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a>See also</h2><a href="/en/2021/11/02/Windows-Research-Notes/" title="Windows Research Notes">Windows Research Notes</a>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
      <category>Development Environment</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
      <tag>Development Environment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows Research Notes</title>
    <link href="/en/2021/11/02/Windows-Research-Notes/"/>
    <url>/en/2021/11/02/Windows-Research-Notes/</url>
    
    <content type="html"><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><p>Hi there, I go by Kenji Mouri.</p><p>I like to write technical articles, especially I like to post long technical posts in PCBeta Forum. Because I think posting in a forum where a lot of people go can make more people see it and make more people get help because of thetechnical articles I write.</p><p>Around 2014 to 2016 was my productive period. Then I did not publish many technical articles because I was not inspiredto write long-form technical articles. But I did not have the courage to publish short technical articles in that time, because I was afraid that others said I was publishing useless posts in the forum.</p><p>As we all know, the server of PCBeta Forum was very unstable and inaccessible in the past few years. So at that time, Ihad the idea of summarizing all the articles I had published in forums like PCBeta into a blog I hosted on GitHub. After all, forums can’t exist forever, but Git repositories everyone can make backups of, and make it able to keep thecontent I write.</p><p>Later, after the PCBeta Forum was back to normal, I forgot about it. Until recently, when I was encouraged to do so bymy friend walterlv, because of some opportunity.</p><p>I will not simply archive the technical articles I wrote before, but will errata and rewrite the content according tothe previous content with my current perspective. I hope this will reduce potential misunderstandings and better help readers who read this series of articles.</p><p>If you find any errors in this series of articles, or have better suggestions, please send your feedback directly to<a href="https://github.com/MouriNaruto/MouriNaruto/issues">https://github.com/MouriNaruto/MouriNaruto/issues</a>.</p><p>Note: This index will be updated as the content of this series is updated.</p><p>Note: Article entries without hyperlinks in the table of contents are what I want to write about in the future.</p><p>Read <a href="https://mouri.moe/zh/2021/11/02/Windows-Research-Notes/">here</a> for the Chinese version of this article if you are not good at English. (Translation: 如果你不擅长英文，可以点击本段话中的链接阅读中文版)</p><h2 id="Table-of-contents"><a href="#Table-of-contents" class="headerlink" title="Table of contents"></a>Table of contents</h2><ul><li>System Restore<ul><li><a href="#">Post not found: The-usage-of-System-Restore</a></li><li><a href="/en/2021/11/14/Using-System-Restore-via-CSharp/" title="Using System Restore via C#">Using System Restore via C#</a></li><li><a href="#">Post not found: Using-System-Restore-via-Cpp</a></li><li><a href="#">Post not found: New-behavior-of-System-Restore-since-Windows-8</a></li></ul></li><li>Compact OS<ul><li><a href="#">Post not found: The-history-and-principle-of-Compact-OS</a></li><li><a href="#">Post not found: The-exclusion-list-of-Compact-OS</a></li><li><a href="#">Post not found: The-usage-of-Compact-OS</a></li></ul></li><li>User Mode (Win32 API, NT API, Windows Runtime)<ul><li><a href="#">Post not found: Enable-Per-Monitor-DPI-Awareness-Mode-for-File-Explorer-in-Windows-10</a></li><li><a href="#">Post not found: Modify-the-size-of-Start-Screen-in-Windows-8-1</a></li><li><a href="#">Post not found: Notes-for-implement-Per-Monitor-DPI-Awareness-Mode-support-in-earlier-versions-of-Windows-10</a></li><li><a href="/en/2021/11/07/Launch-Windows-Store-App-via-Win32-API/" title="Launch Windows Store App via Win32 API">Launch Windows Store App via Win32 API</a></li><li><a href="/en/2021/11/14/Defrag-memory-with-NT-API/" title="Defrag memory with NT API">Defrag memory with NT API</a></li><li><a href="#">Post not found: Bypass-file-and-registry-access-check-only-with-Administrator</a></li></ul></li><li>Development Environment (Visual Studio, MSBuild, Cargo)<ul><li><a href="#">Post not found: Control-the-memory-usage-of-WSL-2-instance</a></li><li><a href="/en/2021/11/04/Use-VC-LTL-in-your-Rust-projects/" title="Use VC-LTL in your Rust projects">Use VC-LTL in your Rust projects</a></li><li><a href="#">Post not found: Develop-autonomous-driving-stack-with-Autoware-Auto-and-Windows-11</a></li><li><a href="#">Post not found: Tricks-for-parallel-compilation-with-MSVC-toolchain</a></li><li><a href="#">Post not found: Some-noticeable-issues-in-Windows-10-Build-1904x-ISOs</a></li><li><a href="/en/2021/11/23/Build-Qt-6-with-VC-LTL/" title="Build Qt 6 with VC-LTL">Build Qt 6 with VC-LTL</a></li><li><a href="/en/2021/11/25/Use-VC-LTL-in-your-Cpp-WinRT-UWP-projects/" title="Use VC-LTL in your C++&#x2F;WinRT UWP projects">Use VC-LTL in your C++&#x2F;WinRT UWP projects</a></li></ul></li></ul><h2 id="Pending-articles"><a href="#Pending-articles" class="headerlink" title="Pending articles"></a>Pending articles</h2><ul><li><a href="http://bbs.pcbeta.com/viewthread-1611980-1-1.html">浅谈Metro App的沙盒AppContainer</a>  </li><li><a href="http://bbs.pcbeta.com/viewthread-1519551-1-1.html">原生集成Windows 8/8.1 自带的Windows Defender病毒库的教程</a></li></ul><h2 id="Planned-articles"><a href="#Planned-articles" class="headerlink" title="Planned articles"></a>Planned articles</h2><ul><li>App Container<ul><li>App Container 基本介绍</li><li>通过 Win32 API 使用 App Container</li><li>通过第三方工具使用 App Container</li><li>通过 NT API 创建 App Container 访问令牌及注意事项</li><li>Windows 10 及之后版本的 App Container 行为变更</li></ul></li><li>Windows 用户模式 (Win32 API, NT API, Windows Runtime)<ul><li>Windows 内置的 C 运行时库的历史沿革</li><li>通过 Windows Runtime API 实现对商店应用的升级</li><li>Windows 应用程序打包项目的已知问题和解决方案</li><li>使用 C++/WinRT 实现一个轻量级 XAML Island 应用</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Technologies</category>
      
      <category>Windows</category>
      
      <category>Windows Research Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technologies</tag>
      
      <tag>Windows</tag>
      
      <tag>Windows Research Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Drop ARM32 support on the Windows platform</title>
    <link href="/en/2021/05/17/Drop-ARM32-support-on-the-Windows-platform/"/>
    <url>/en/2021/05/17/Drop-ARM32-support-on-the-Windows-platform/</url>
    
    <content type="html"><![CDATA[<p>For my deliberate consideration, The open source projects created or maintainedby myself will drop the ARM32 support on the Windows platform. Here are thereasons:</p><ul><li>The latest version of ARM32 version for Windows desktop is Redstone 2 InsiderBuild 15035. I know Windows RT 8.1 and Windows 10 IoT Core aren’t in the stage of end of support, but most of daily users are drop their devices (Windows RT 8.x tablets) or have a better solution (Windows 10 IoT Core userson Raspberry Pi devices should migrate to Linux or ARM64 version for Windows10 desktop).</li><li>Future ARM processors are deprecating ARM32 ISA support, and Apple Silicon M1had dropped the ARM32 support at all. So we can’t run ARM32 version of Windows desktop applications on these devices.</li><li>I’m considering the possibility of using Rust, .NET, and Project Reunion towrite a part of the implementation of some projects in the future, and theseinfrastructures will not reconsider support for ARM32 support on Windows.</li><li>Reduce the size of release package and make the continuous integrationfaster.</li></ul><p>Kenji Mouri</p>]]></content>
    
    
    <categories>
      
      <category>Notice</category>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Notice</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
